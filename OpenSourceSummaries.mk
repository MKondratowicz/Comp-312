The three open source projects that will be discussed in increasing favoritism are Android OS, Gimp, and Wireshark. These are all very well known programs that I have used extensively and had a lot of fun with. Android Open Source Project, AOSP for short, is a operating system project used by major cell phone manufacturers and is one of the best arguments for open source projects. It is very flexible and both the community and the major businesses using the code all have a major interest in its success. Gimp is a image editor that can also be used for graphic design, free form drawing and various other graphics related things. While the creator said that they are just trying to fulfill the vision they have for Gimp, it does a good job at doing the same things that Photoshop does without breaking your bank if it is for general use. Wireshark is a packet analyzer. It can understand information from various internet protocols and is used in network diagnostics. 

The Android OS is the basis for the Android Open Source Project. The OS is just the foundation for the programs that the cell phone companies or communities use. There is heavy developer interest in Android because of how much it can be used for and major companies have recently been encouraging development. There are job positions for those who are well versed in Android OS and there are updates constantly being pushed by the community. It has a big influence on the market and on users. Users are very interested in it given that devices that use the Android OS have been outselling Windows and Apple since 2011. There are also games that are made for Android that get far more attention in the Google Play market than the Apple markets. 

There is extensive documentation for the Android OS. It covers how to manage the code, source code, common names for each release(e.g. Kitkat, Jellybean), the roles that a person could take in a project, guidelines and a FAQ. It is very detailed and manages to be detailed without being intimidating. The documentation also shows how to contribute to the code using different programs and it has guidelines for the code. 

The code is on Github so it is very easily maintained and has comments that explain everything. The AOSP encourages everyone to participate in the project, whether it’s through bug reporting or making basic apps. As mentioned previously, they have guidelines on making codes and they have examples as well. The project does not wave off a potential contributor and tell them to figure it out, it tells and shows them exactly what to do.

AOSP has a page that shows how each person can contribute. It is asking for bug reporters, developers and developers for programs that use Android. All in all, it’s a very well maintained project, though that isn’t unexpected given that it is a project that has a lot of attention. 

Gimp is a good program for those who are not working in commercial photo manipulation or making advertisements, though the program is starting to get professional recognition from those who work in advertising or graphics design in major companies or through major projects. It is in between Microsoft Paint and Adobe Photoshop in its complexity which makes it great for the enthusiast who can not afford the software for Photoshop but is skilled enough to use its basic features and needs more than Paint can offer. It is a very friendly program to use.

There isn’t much developer interest but there is a lot of user interest due to the respect that it is starting to get and due to it being a good alternative to professional products. There are 58 developers working together on gimp and while they are only the active contributors, there are lots of ways that a person can contribute to the project. Some of the ways one can contribute are adding documentation, translations, and teaching others about Gimp and how to use Gimp. 

The documentation on how to use Gimp is fantastic, but that is really the only fantastic for the user guides. The documentation for the developers doesn’t cover guidelines, so the code written varies based on which programmer is working on the code. The wiki is fantastic for looking up features and finding specifics for what Gimp offers. 

Wireshark is one of the best diagnostic tools for a person who is monitoring their network for any unusual activity, troubleshooting or for telecommunications development. It makes it very easy to read the information by breaking it up into parts that are distinguished by protocol. It also shows the source and destination of each bit of information. Wireshark also easily shows you what information was sent and what the device making the connections was, the operating system and what browser was being used. It is a very useful tool that should be known by every person who works in networking and those people would at least have a basic familiarity with it due to how powerful it is. 

There is developer interest in wireshark and there is a community for it, but it is much smaller. It has a very specialized function so the interest in it is very specific. It is only really used by those who are in the networking or telecommunications field so it does not require a huge community or a lot of attention because it only does one function and it does it very well. The field that it is trying to cater to all has a lot of users who it quite often.

The documentation is in a wiki page that gets down to very specific topics and explains how to code for the project. The code itself is also very detailed and it has a lot of comments guiding the reader and a potential coder. The comments cover everything from explaining the code to telling the coder what not to do so that everything could compile correctly and not crash upon executing. There isn’t much in the way of contributions, the website does acknowledge that the code is maintained by a small group of developers who are only loosely working together, there does not seem to be a lot of group work.
